services:
# Mongo DB Service
  mongodb:
    image: mongo
    restart: always
    container_name: mongodb
    ports:
      - "${SPRING_DATA_MONGODB_PORT}:27017"
    volumes:
      - mongodb_data:/data/db
    networks:
      - arguments-network
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
      MONGO_INITDB_DATABASE: ${MONGO_INITDB_DATABASE}
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 10s
      timeout: 5s
      retries: 5
# Arguments Backend Service
  arguments-backend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: arguments-backend
    ports:
      - "${SPRING_PORT}:8088"
    environment:
      - SPRING_DATA_MONGODB_USERNAME=${SPRING_DATA_MONGODB_USERNAME}
      - SPRING_DATA_MONGODB_PASSWORD=${SPRING_DATA_MONGODB_PASSWORD}
      - SPRING_DATA_MONGODB_DATABASE=${SPRING_DATA_MONGODB_DATABASE}
      - SPRING_DATA_MONGODB_HOST=${SPRING_DATA_MONGODB_HOST}
      - SPRING_DATA_MONGODB_PORT=${SPRING_DATA_MONGODB_PORT}
      - SPRING_DATA_MONGODB_AUTHENTICATION_DATABASE=${SPRING_DATA_MONGODB_AUTHENTICATION_DATABASE}
    depends_on:
      mongodb:
        condition: service_healthy
    networks:
      - arguments-network
# Ollama Service
  ollama:
    image: ollama/ollama:latest
    container_name: ollama
    ports:
      - "${OLLAMA_PORT}:11434"
    volumes:
      - ollama_data:/root/.ollama
    networks:
      - arguments-network
    entrypoint: ["sh", "-c"]
    command: ["ollama serve && ollama pull llama3.2:1b "]

networks:
  arguments-network:
    driver: bridge

volumes:
  mongodb_data:
  ollama_data: